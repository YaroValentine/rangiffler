package org.rangiffler.db.dao;import org.rangiffler.db.ServiceDB;import org.rangiffler.db.entity.AuthUserEntity;import org.rangiffler.db.jpa.EmfProvider;import org.rangiffler.db.jpa.JpaTransactionManager;import java.util.UUID;public class RangifflerAuthDAOHibernate extends JpaTransactionManager implements RangifflerAuthDAO {    public RangifflerAuthDAOHibernate() {        super(EmfProvider.INSTANCE.getEmf(ServiceDB.RANGIFFLER_AUTH).createEntityManager());    }    @Override    public int createUser(AuthUserEntity user) {        user.setPassword(passwordEncoder.encode(user.getPassword()));        persist(user);        return 0;    }    @Override    public AuthUserEntity readUser(UUID uuid) {        return em.find(AuthUserEntity.class, uuid);    }    @Override    public int updateUser(AuthUserEntity user) {        merge(user);        return 1;    }    @Override    public String getUserId(String userName) {        return em.createQuery("select u from AuthUserEntity u where username=:username", AuthUserEntity.class)                .setParameter("username", userName)                .getSingleResult()                .getId()                .toString();    }    @Override    public int removeUser(AuthUserEntity user) {        System.out.println("#### Removing user: " + user.getUsername());        remove(user);        return 0;    }}